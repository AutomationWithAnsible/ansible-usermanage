---

- name: users | Create users
  user:
    force=yes
    append=True
  args: "{{ item }}"
  with_items: cuser.users_db

- name: users | Manage authorized_keys for users
  authorized_key:
     user="{{ item.0.user | default(item.0.name) }}"
     manage_dir="yes"
  args: "{{ item.1 }}"
  with_subelements:
      - cuser.key_db
      - keys
  register: keyrc
  failed_when: "'failed' in keyrc and 'getpwnam' not in keyrc.msg"

#- name: single | Manage authorized_keys for multi access to same user
#  authorized_key:
#     user="{{ item.0.name }}"
#     state={{ lookup("template","../templates/get_user_state.j2") }}
#     key="{{ lookup("template","../templates/get_user_key.j2") }}"
#     manage_dir="yes"
#     key_options="{{ item.1.key_options | default(omit) }}"
#  with_subelements:
#      - usermanage_servers
#      - userkeys
#  register: keyrc
#  failed_when: "'failed' in keyrc and 'getpwnam' not in keyrc.msg"

